name: CI

on: [push, pull_request, workflow_dispatch]

env:
  NODE_VERSION: 20

jobs:
  preparation:
    name: Preparation
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.packages.outputs.packages }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        with:
          # npm cache files are stored in '~/.npm' on Linux/macOS
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-preparation-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-preparation-
            ${{ runner.os }}-

      - name: Install dependencies
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        # To verify the npm cache replace the run command below with
        #   run: npm cache verify && npm ci --prefer-offline --no-audit --loglevel verbose && npm cache verify
        run: npm ci

      - name: Extract packages
        id: packages
        run: |
          packages=$(npm ls --json | jq '.dependencies | keys' | jq -r '.[]')
          if [[ ${{ github.ref_name == github.event.repository.default_branch }} == 'false' ]]; then
            changedFiles=$(git diff --name-only origin/${{ github.event.repository.default_branch }} HEAD)
            changedPackages=()
            for p in ${packages}; do
              for cf in ${changedFiles}; do
                if [[ "${cf}" == "packages/${p}"/** ]]; then
                  changedPackages+=("${p}")
                  break
                fi
              done
            done
            packages=${changedPackages[@]}
          fi
          output=()
          for p in ${packages}; do
            output+=("{\"package\": \"${p}\"}")
          done
          output="$(echo ${output[@]} | jq -s '.')"
          echo "${output}"
          echo "packages={\"include\":$(echo ${output})}" >> $GITHUB_OUTPUT

  build-test-deploy:
    name: "Build Test Deploy ${{ matrix.package }}"
    runs-on: ubuntu-latest
    needs: [preparation]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.preparation.outputs.packages) }}

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get cached dependencies
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-preparation-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies (if cache absent)
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Install dependencies
        if: ${{ steps.cache-npm.outputs.cache-hit == 'true' }}
        run: npm i --prefer-offline --no-audit

      - name: Build package
        run: npm run build --workspace=${{ matrix.package }}
